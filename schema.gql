# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input AddFileRecord {
  name: String!
  iconUrl: String!
  order: Float!
}

input AddFolderRecord {
  name: String!
}

input AddKeywordRecord {
  name: String!
  text: String!
}

input AddNoteRecord {
  name: String!
  text: String!
}

input EditNoteRecord {
  id: ID!
  name: String
  text: String
}

type File {
  id: ID
  name: String
  iconUrl: String
  order: Float
  folder: Folder
  notes: [Note!]
}

input FindFileByIdRecord {
  id: String
}

input FindFolderByIdRecord {
  id: ID!
}

input FindKeywordByIdRecord {
  id: ID!
}

input FindNoteByIdRecord {
  id: ID!
}

type Folder {
  uid: ID
  name: String
  user: User
  files: [File!]
}

input GetFolderByNameRecord {
  name: String!
}

input GetFolderEditRecord {
  id: ID!
  name: String!
}

input GetUserByNameRecord {
  name: String!
}

type Keyword {
  id: ID
  name: String
  text: String
  notes: [Note!]
}

type Mutation {
  userRegister(record: RegisterUserRecord!): User!
  addFolderToUser(record: RegisterUserRecord!): User!
  addFolder(record: AddFolderRecord!): Folder!
  editFolderById: Folder!
  deleteFolder(record: RemoveFolderRecord!): Folder
  addFile(record: AddFileRecord!): File!
  removeFile(record: RemoveFileRecord!): File
  stickFileToFolder(record: StickFileToFolderRecord!): Folder
  addNote(record: AddNoteRecord!): Note
  editNote(record: EditNoteRecord!): Note
  addKeyword(record: AddKeywordRecord!): Keyword!
}

type Note {
  id: String
  name: String
  text: String
  files: [File!]
  keywords: [Keyword!]
}

type Query {
  getUsers: [User!]!
  getUserByName(record: GetUserByNameRecord!): User
  queryBuilderUsers: User
  getAllFolders: [Folder!]
  getFolderByName(record: GetFolderByNameRecord!): Folder!
  searchFolders(record: GetFolderByNameRecord!): [Folder!]
  getFolderById(record: FindFolderByIdRecord!): Folder!
  getAllFiles: [File!]
  findFileById(record: FindFileByIdRecord): File!
  getAllNotes: [Note!]!
  findNoteById(record: FindNoteByIdRecord!): Note
  getKeywords: [Keyword!]
  getKeyWordById(record: FindKeywordByIdRecord!): Keyword
}

input RegisterUserRecord {
  firstName: String
  lastName: String
  folderName: String
}

input RemoveFileRecord {
  id: String!
}

input RemoveFolderRecord {
  uid: String!
}

input StickFileToFolderRecord {
  folderId: String!
  fileId: String!
}

type User {
  uid: ID!
  firstName: String
  lastName: String
  folder: Folder
  offeredUsername: String
}
